# Makefile.in generated by automake 1.11.2 from Makefile.am.
# libempathy/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/empathy
pkgincludedir = $(includedir)/empathy
pkglibdir = $(libdir)/empathy
pkglibexecdir = $(libexecdir)/empathy
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/tools/check-coding-style.mk \
	$(top_srcdir)/tools/flymake.mk
#am__append_1 = $(goa_sources)
am__append_2 = $(goa_sources)
subdir = libempathy
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/as-compiler-flag.m4 \
	$(top_srcdir)/m4/ax_config_dir.m4 \
	$(top_srcdir)/m4/empathy-args.m4 \
	$(top_srcdir)/m4/empathy-valgrind.m4 \
	$(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/gnome-doc-utils.m4 \
	$(top_srcdir)/m4/gsettings.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/intltool.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
libempathy_la_DEPENDENCIES =  \
	$(top_builddir)/extensions/libemp-extensions.la \
	$(top_builddir)/telepathy-yell/telepathy-yell/libtelepathy-yell.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libempathy_la_SOURCES_DIST = action-chain-internal.h \
	empathy-account-settings.h empathy-auth-factory.h \
	empathy-camera-monitor.h empathy-chatroom-manager.h \
	empathy-chatroom.h empathy-client-factory.h \
	empathy-connection-managers.h empathy-connectivity.h \
	empathy-connection-aggregator.h empathy-contact-groups.h \
	empathy-contact-list.h empathy-contact.h empathy-debug.h \
	empathy-ft-factory.h empathy-ft-handler.h empathy-gsettings.h \
	empathy-presence-manager.h empathy-individual-manager.h \
	empathy-irc-network-manager.h empathy-irc-network.h \
	empathy-irc-server.h empathy-keyring.h empathy-location.h \
	empathy-message.h empathy-request-util.h \
	empathy-server-sasl-handler.h empathy-server-tls-handler.h \
	empathy-status-presets.h empathy-time.h \
	empathy-tls-certificate.h empathy-tls-verifier.h \
	empathy-tp-chat.h empathy-tp-contact-factory.h \
	empathy-tp-contact-list.h empathy-tp-roomlist.h \
	empathy-tp-streamed-media.h empathy-types.h empathy-utils.h \
	action-chain.c empathy-account-settings.c \
	empathy-auth-factory.c empathy-camera-monitor.c \
	empathy-chatroom-manager.c empathy-chatroom.c \
	empathy-client-factory.c empathy-connection-managers.c \
	empathy-connectivity.c empathy-connection-aggregator.c \
	empathy-contact-groups.c empathy-contact-list.c \
	empathy-contact.c empathy-debug.c empathy-ft-factory.c \
	empathy-ft-handler.c empathy-presence-manager.c \
	empathy-individual-manager.c empathy-irc-network-manager.c \
	empathy-irc-network.c empathy-irc-server.c empathy-keyring.c \
	empathy-message.c empathy-request-util.c \
	empathy-server-sasl-handler.c empathy-server-tls-handler.c \
	empathy-status-presets.c empathy-time.c \
	empathy-tls-certificate.c empathy-tls-verifier.c \
	empathy-tp-chat.c empathy-tp-contact-factory.c \
	empathy-tp-contact-list.c empathy-tp-roomlist.c \
	empathy-tp-streamed-media.c empathy-utils.c \
	cheese-camera-device-monitor.c cheese-camera-device-monitor.h \
	empathy-goa-auth-handler.c empathy-goa-auth-handler.h
am__objects_1 =
am__objects_2 = $(am__objects_1) action-chain.lo \
	empathy-account-settings.lo empathy-auth-factory.lo \
	empathy-camera-monitor.lo empathy-chatroom-manager.lo \
	empathy-chatroom.lo empathy-client-factory.lo \
	empathy-connection-managers.lo empathy-connectivity.lo \
	empathy-connection-aggregator.lo empathy-contact-groups.lo \
	empathy-contact-list.lo empathy-contact.lo empathy-debug.lo \
	empathy-ft-factory.lo empathy-ft-handler.lo \
	empathy-presence-manager.lo empathy-individual-manager.lo \
	empathy-irc-network-manager.lo empathy-irc-network.lo \
	empathy-irc-server.lo empathy-keyring.lo empathy-message.lo \
	empathy-request-util.lo empathy-server-sasl-handler.lo \
	empathy-server-tls-handler.lo empathy-status-presets.lo \
	empathy-time.lo empathy-tls-certificate.lo \
	empathy-tls-verifier.lo empathy-tp-chat.lo \
	empathy-tp-contact-factory.lo empathy-tp-contact-list.lo \
	empathy-tp-roomlist.lo empathy-tp-streamed-media.lo \
	empathy-utils.lo
am__objects_3 = empathy-goa-auth-handler.lo
#am__objects_4 = $(am__objects_3)
am_libempathy_la_OBJECTS = $(am__objects_2) \
	cheese-camera-device-monitor.lo $(am__objects_4)
am__objects_5 = empathy-enum-types.lo
nodist_libempathy_la_OBJECTS = $(am__objects_5)
libempathy_la_OBJECTS = $(am_libempathy_la_OBJECTS) \
	$(nodist_libempathy_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libempathy_la_SOURCES) $(nodist_libempathy_la_SOURCES)
DIST_SOURCES = $(am__libempathy_la_SOURCES_DIST)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(dtddir)" "$(DESTDIR)$(ircnetworksdir)"
DATA = $(dtd_DATA) $(ircnetworks_DATA)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run aclocal-1.11
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run tar
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run autoconf
AUTOHEADER = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run autoheader
AUTOMAKE = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CHEESE_CFLAGS = -pthread -DGSEAL_ENABLE -D_REENTRANT -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/include/cheese -I/usr/include/gtk-3.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng14  
CHEESE_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0 -lcheese-gtk  
CONNMAN_CFLAGS = 
CONNMAN_LIBS = 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DBUS_BINDING_TOOL = /usr/bin/dbus-binding-tool
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS = --disable-scrollkeeper 
DLLTOOL = false
DOC_USER_FORMATS = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EDS_CFLAGS = -DCAMEL_HAVE_NSS -DCAMEL_HAVE_SSL -pthread -I/usr/local/include/evolution-data-server-3.2 -I/usr/include/nss -I/usr/include/nspr -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/include/gconf/2 -I/usr/include/libsoup-2.4 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include  
EDS_LIBS = -pthread -L/usr/local/lib -lebook-1.2 -lcamel-1.2 -ledataserver-1.2 -lsqlite3 -lssl3 -lsmime3 -lnss3 -lnssutil3 -lplds4 -lplc4 -lnspr4 -lpthread -ldl -lxml2 -lgconf-2 -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
EGREP = /bin/grep -E
EMPATHY_AV_CFLAGS = -pthread -I/usr/local/include/gstreamer-0.10 -I/usr/local/include/telepathy-1.0 -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2 -I/usr/include/telepathy-1.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include  
EMPATHY_AV_LIBS = -pthread -L/usr/local/lib -lgstfarsight-0.10 -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lxml2 -lgthread-2.0 -lrt -lglib-2.0 -ltelepathy-farsight  
EMPATHY_CALL_CFLAGS = 
EMPATHY_CALL_LIBS = 
EMPATHY_CFLAGS = -pthread -DGSEAL_ENABLE -D_REENTRANT -I/usr/local/include -I/usr/local/include/telepathy-1.0 -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gee-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/gnome-keyring-1 -I/usr/include/p11-kit-1 -I/usr/include/gstreamer-0.10 -I/usr/include/libxml2 -I/usr/include/telepathy-logger-0.2 -I/usr/include/gtk-3.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng14 -I/usr/include/gcr-3 -I/usr/include/gck-1 -I/usr/include/webkit-3.0 -I/usr/include/libsoup-2.4 -I/usr/include/gsettings-desktop-schemas  
EMPATHY_LIBS = -pthread -Wl,--export-dynamic -L/usr/local/lib -ldbus-glib-1 -ldbus-1 -lpthread -lfolks-telepathy -lfolks -lgee -lgnome-keyring -lgnutls -lgstinterfaces-0.10 -lgstreamer-0.10 -ltelepathy-logger -ltelepathy-glib -lxml2 -lX11 -lcanberra-gtk3 -lcanberra -lnotify -lgcr-3 -ltasn1 -lgck-1 -lp11-kit -lpulse-mainloop-glib -lpulse -lwebkitgtk-3.0 -lgtk-3 -lgdk-3 -latk-1.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lcairo -lpango-1.0 -lfreetype -lfontconfig -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
ENABLE_CODING_STYLE_CHECKS = yes
ENCHANT_CFLAGS = -pthread -I/usr/include/enchant -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
ENCHANT_LIBS = -pthread -lenchant -lgmodule-2.0 -lrt -lglib-2.0  
ERROR_CFLAGS = -Wall -Werror -Wextra -Wno-missing-field-initializers -Wno-unused-parameter -Wdeclaration-after-statement -Wshadow -Wmissing-prototypes -Wmissing-declarations -Wstrict-prototypes
EXEEXT = 
FGREP = /bin/grep -F
GEOCLUE_CFLAGS = 
GEOCLUE_LIBS = 
GEOCODE_CFLAGS = 
GEOCODE_LIBS = 
GETTEXT_MACRO_VERSION = 0.17
GETTEXT_PACKAGE = empathy
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_COMPILE_SCHEMAS = /usr/bin/glib-compile-schemas
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -lglib-2.0  
GLIB_MKENUMS = glib-mkenums
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GOA_CFLAGS = 
GOA_LIBS = 
GOBJECT_QUERY = gobject-query
GREP = /bin/grep
GSETTINGS_DISABLE_SCHEMAS_COMPILE = 
HELP_DIR = ${datadir}/gnome/help
INSTALL = /bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/local/bin/intltool-extract
INTLTOOL_MERGE = /usr/local/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/local/bin/intltool-update
INTL_MACOSX_LIBS = 
LD = /usr/bin/ld
LDFLAGS = 
LIBCHAMPLAIN_CFLAGS = 
LIBCHAMPLAIN_LIBS = 
LIBICONV = -liconv
LIBINTL = 
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/missing --run makeinfo
MANIFEST_TOOL = :
MEEGO_CFLAGS = 
MEEGO_LIBS = 
MISSION_CONTROL_PLUGINS_DIR = /usr/lib/mission-control-plugins.0
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NETWORK_MANAGER_CFLAGS = -pthread -I/usr/include/libnm-glib -I/usr/include/NetworkManager -I/usr/include/dbus-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/dbus-1.0/include  
NETWORK_MANAGER_LIBS = -pthread -lnm-glib -ldbus-glib-1 -ldbus-1 -lpthread -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
NM = /usr/bin/nm -B
NMEDIT = 
NST_CFLAGS = -pthread -DGSEAL_ENABLE -I/usr/local/include/nautilus-sendto -I/usr/local/include/atk-1.0 -I/usr/local/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/gtk-3.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng14  
NST_LIBS = -Wl,--export-dynamic -pthread -L/usr/local/lib -lgtk-3 -lgdk-3 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo-gobject -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lglib-2.0  
OBJDUMP = objdump
OBJEXT = o
OMF_DIR = ${datadir}/omf
OTOOL = 
OTOOL64 = 
PACKAGE = empathy
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/browse.cgi?product=empathy
PACKAGE_NAME = Empathy
PACKAGE_STRING = Empathy 3.3.4.20120127
PACKAGE_TARNAME = empathy
PACKAGE_URL = https://live.gnome.org/Empathy
PACKAGE_VERSION = 3.3.4.20120127
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /usr/local/lib/pkgconfig:telepathy-yell/telepathy-yell
POSUB = po
PYTHON = /usr/local/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux3
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.7
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UDEV_CFLAGS = -pthread -I/usr/include/gudev-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
UDEV_LIBS = -pthread -lgudev-1.0 -lgobject-2.0 -lgthread-2.0 -lrt -lglib-2.0  
USE_NLS = yes
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VALGRIND_PATH = 
VERSION = 3.3.4.20120127
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
XMKMF = 
XSLTPROC = xsltproc
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
YELL_CFLAGS = -pthread -I/usr/local/include/telepathy-1.0 -I/home/jovanka/my-projects/empathy-git/empathy/telepathy-yell -I/usr/include/dbus-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib/dbus-1.0/include  
YELL_LIBS = /home/jovanka/my-projects/empathy-git/empathy/telepathy-yell/telepathy-yell/libtelepathy-yell.la  
abs_builddir = /home/jovanka/my-projects/empathy-git/empathy/libempathy
abs_srcdir = /home/jovanka/my-projects/empathy-git/empathy/libempathy
abs_top_builddir = /home/jovanka/my-projects/empathy-git/empathy
abs_top_srcdir = /home/jovanka/my-projects/empathy-git/empathy
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gsettingsschemadir = ${datarootdir}/glib-2.0/schemas
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/jovanka/my-projects/empathy-git/empathy/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/empathy
pkgpythondir = ${pythondir}/empathy
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.7/site-packages
pythondir = ${prefix}/lib/python2.7/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = \
	$(ERROR_CFLAGS)					\
	-I.                                             \
	-I$(top_srcdir)                                 \
	-I$(top_builddir)                               \
	-DDATADIR=\""$(datadir)"\"              	\
	-DLOCALEDIR=\""$(datadir)/locale"\"		\
	-DG_LOG_DOMAIN=\"empathy\"			\
	-DGCR_API_SUBJECT_TO_CHANGE			\
	$(EMPATHY_CFLAGS)				\
	$(YELL_CFLAGS)					\
	$(GEOCLUE_CFLAGS)				\
	$(GEOCODE_CFLAGS)				\
	$(NETWORK_MANAGER_CFLAGS)			\
	$(CONNMAN_CFLAGS)				\
	$(UDEV_CFLAGS)					\
	$(GOA_CFLAGS)					\
	$(WARN_CFLAGS)					\
	$(DISABLE_DEPRECATED)

BUILT_SOURCES = \
	empathy-enum-types.h				\
	empathy-enum-types.c

noinst_LTLIBRARIES = libempathy.la
libempathy_headers = \
	action-chain-internal.h			\
	empathy-account-settings.h		\
	empathy-auth-factory.h			\
	empathy-camera-monitor.h		\
	empathy-chatroom-manager.h		\
	empathy-chatroom.h			\
	empathy-client-factory.h \
	empathy-connection-managers.h		\
	empathy-connectivity.h			\
	empathy-connection-aggregator.h		\
	empathy-contact-groups.h		\
	empathy-contact-list.h			\
	empathy-contact.h			\
	empathy-debug.h				\
	empathy-ft-factory.h			\
	empathy-ft-handler.h			\
	empathy-gsettings.h			\
	empathy-presence-manager.h				\
	empathy-individual-manager.h		\
	empathy-irc-network-manager.h		\
	empathy-irc-network.h			\
	empathy-irc-server.h			\
	empathy-keyring.h 			\
	empathy-location.h			\
	empathy-message.h			\
	empathy-request-util.h			\
	empathy-server-sasl-handler.h		\
	empathy-server-tls-handler.h		\
	empathy-status-presets.h		\
	empathy-time.h				\
	empathy-tls-certificate.h		\
	empathy-tls-verifier.h			\
	empathy-tp-chat.h			\
	empathy-tp-contact-factory.h		\
	empathy-tp-contact-list.h		\
	empathy-tp-roomlist.h			\
	empathy-tp-streamed-media.h		\
	empathy-types.h				\
	empathy-utils.h

libempathy_handwritten_source = \
	$(libempathy_headers)				\
	action-chain.c					\
	empathy-account-settings.c			\
	empathy-auth-factory.c				\
	empathy-camera-monitor.c			\
	empathy-chatroom-manager.c			\
	empathy-chatroom.c				\
	empathy-client-factory.c \
	empathy-connection-managers.c			\
	empathy-connectivity.c				\
	empathy-connection-aggregator.c		\
	empathy-contact-groups.c			\
	empathy-contact-list.c				\
	empathy-contact.c				\
	empathy-debug.c					\
	empathy-ft-factory.c				\
	empathy-ft-handler.c				\
	empathy-presence-manager.c					\
	empathy-individual-manager.c			\
	empathy-irc-network-manager.c			\
	empathy-irc-network.c				\
	empathy-irc-server.c				\
	empathy-keyring.c				\
	empathy-message.c				\
	empathy-request-util.c				\
	empathy-server-sasl-handler.c			\
	empathy-server-tls-handler.c			\
	empathy-status-presets.c			\
	empathy-time.c					\
	empathy-tls-certificate.c			\
	empathy-tls-verifier.c				\
	empathy-tp-chat.c				\
	empathy-tp-contact-factory.c			\
	empathy-tp-contact-list.c			\
	empathy-tp-roomlist.c				\
	empathy-tp-streamed-media.c			\
	empathy-utils.c


# these are sources that depend on GOA
goa_sources = \
	empathy-goa-auth-handler.c \
	empathy-goa-auth-handler.h \
	$(NULL)

libempathy_la_SOURCES = $(libempathy_handwritten_source) \
	cheese-camera-device-monitor.c cheese-camera-device-monitor.h \
	$(am__append_1)
dtddir = $(datadir)/empathy
dtd_DATA = \
	empathy-status-presets.dtd		\
	empathy-contact-groups.dtd		\
	empathy-chatroom-manager.dtd		\
	empathy-irc-networks.dtd

ircnetworksdir = $(datadir)/empathy
ircnetworks_DATA = \
	irc-networks.xml

EXTRA_DIST = $(dtd_DATA) $(ircnetworks_DATA) $(am__append_2)
CLEANFILES = \
	$(BUILT_SOURCES)		\
	stamp-empathy-enum-types.h


# do not distribute generated files
nodist_libempathy_la_SOURCES = \
	$(BUILT_SOURCES)

libempathy_la_LIBADD = \
	$(top_builddir)/extensions/libemp-extensions.la \
	$(top_builddir)/telepathy-yell/telepathy-yell/libtelepathy-yell.la \
	$(GCR_LIBS) \
	$(EMPATHY_LIBS) \
	$(GEOCLUE_LIBS) \
	$(GEOCODE_LIBS) \
	$(NETWORK_MANAGER_LIBS) \
	$(CONNMAN_LIBS) \
	$(UDEV_LIBS) \
	$(GOA_LIBS) \
	$(LIBM)

check_c_sources = \
    $(libempathy_handwritten_source) \
    $(goa_sources) \
    $(NULL)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/tools/flymake.mk $(top_srcdir)/tools/check-coding-style.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu libempathy/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu libempathy/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libempathy.la: $(libempathy_la_OBJECTS) $(libempathy_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libempathy_la_OBJECTS) $(libempathy_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action-chain.Plo
include ./$(DEPDIR)/cheese-camera-device-monitor.Plo
include ./$(DEPDIR)/empathy-account-settings.Plo
include ./$(DEPDIR)/empathy-auth-factory.Plo
include ./$(DEPDIR)/empathy-camera-monitor.Plo
include ./$(DEPDIR)/empathy-chatroom-manager.Plo
include ./$(DEPDIR)/empathy-chatroom.Plo
include ./$(DEPDIR)/empathy-client-factory.Plo
include ./$(DEPDIR)/empathy-connection-aggregator.Plo
include ./$(DEPDIR)/empathy-connection-managers.Plo
include ./$(DEPDIR)/empathy-connectivity.Plo
include ./$(DEPDIR)/empathy-contact-groups.Plo
include ./$(DEPDIR)/empathy-contact-list.Plo
include ./$(DEPDIR)/empathy-contact.Plo
include ./$(DEPDIR)/empathy-debug.Plo
include ./$(DEPDIR)/empathy-enum-types.Plo
include ./$(DEPDIR)/empathy-ft-factory.Plo
include ./$(DEPDIR)/empathy-ft-handler.Plo
include ./$(DEPDIR)/empathy-goa-auth-handler.Plo
include ./$(DEPDIR)/empathy-individual-manager.Plo
include ./$(DEPDIR)/empathy-irc-network-manager.Plo
include ./$(DEPDIR)/empathy-irc-network.Plo
include ./$(DEPDIR)/empathy-irc-server.Plo
include ./$(DEPDIR)/empathy-keyring.Plo
include ./$(DEPDIR)/empathy-message.Plo
include ./$(DEPDIR)/empathy-presence-manager.Plo
include ./$(DEPDIR)/empathy-request-util.Plo
include ./$(DEPDIR)/empathy-server-sasl-handler.Plo
include ./$(DEPDIR)/empathy-server-tls-handler.Plo
include ./$(DEPDIR)/empathy-status-presets.Plo
include ./$(DEPDIR)/empathy-time.Plo
include ./$(DEPDIR)/empathy-tls-certificate.Plo
include ./$(DEPDIR)/empathy-tls-verifier.Plo
include ./$(DEPDIR)/empathy-tp-chat.Plo
include ./$(DEPDIR)/empathy-tp-contact-factory.Plo
include ./$(DEPDIR)/empathy-tp-contact-list.Plo
include ./$(DEPDIR)/empathy-tp-roomlist.Plo
include ./$(DEPDIR)/empathy-tp-streamed-media.Plo
include ./$(DEPDIR)/empathy-utils.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dtdDATA: $(dtd_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(dtddir)" || $(MKDIR_P) "$(DESTDIR)$(dtddir)"
	@list='$(dtd_DATA)'; test -n "$(dtddir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dtddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dtddir)" || exit $$?; \
	done

uninstall-dtdDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dtd_DATA)'; test -n "$(dtddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dtddir)'; $(am__uninstall_files_from_dir)
install-ircnetworksDATA: $(ircnetworks_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(ircnetworksdir)" || $(MKDIR_P) "$(DESTDIR)$(ircnetworksdir)"
	@list='$(ircnetworks_DATA)'; test -n "$(ircnetworksdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ircnetworksdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ircnetworksdir)" || exit $$?; \
	done

uninstall-ircnetworksDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ircnetworks_DATA)'; test -n "$(ircnetworksdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ircnetworksdir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(dtddir)" "$(DESTDIR)$(ircnetworksdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dtdDATA install-ircnetworksDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dtdDATA uninstall-ircnetworksDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am check-local clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dtdDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-ircnetworksDATA \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-dtdDATA uninstall-ircnetworksDATA

check-syntax:
	$(CC) $(AM_CPPFLAGS) $(AM_CFLAGS) -fsyntax-only $(CHK_SOURCES)

.PHONY: check-syntax
check-coding-style:
	@fail=0; \
	if test -n "$(check_misc_sources)"; then \
		tools_dir=$(top_srcdir)/tools \
		sh $(top_srcdir)/tools/check-misc.sh \
			$(addprefix $(srcdir)/,$(check_misc_sources)) || fail=1; \
	fi; \
	if test -n "$(check_c_sources)"; then \
		tools_dir=$(top_srcdir)/tools \
		sh $(top_srcdir)/tools/check-c-style.sh \
			$(addprefix $(srcdir)/,$(check_c_sources)) || fail=1; \
	fi;\
	if test yes = "$(ENABLE_CODING_STYLE_CHECKS)"; then \
		exit "$$fail";\
	else \
		exit 0;\
	fi

check-local: check-coding-style

empathy-enum-types.h: stamp-empathy-enum-types.h
	$(AM_V_GEN)true
stamp-empathy-enum-types.h: $(libempathy_headers) Makefile
	$(AM_V_GEN)(cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#ifndef __LIBEMPATHY_ENUM_TYPES_H__\n" \
			--fhead "#define __LIBEMPATHY_ENUM_TYPES_H__ 1\n\n" \
			--fhead "#include <glib-object.h>\n\n" \
			--fhead "G_BEGIN_DECLS\n\n" \
			--ftail "G_END_DECLS\n\n" \
			--ftail "#endif /* __LIBEMPATHY_ENUM_TYPES_H__ */\n" \
			--fprod "#include <libempathy/@filename@>\n" \
			--eprod "#define EMPATHY_TYPE_@ENUMSHORT@ @enum_name@_get_type()\n" \
			--eprod "GType @enum_name@_get_type (void);\n" \
		$(libempathy_headers) ) > xgen-gth \
	&& (cmp -s xgen-gth empathy-enum-type.h || cp xgen-gth empathy-enum-types.h) \
	&& rm -f xgen-gth \
	&& echo timestamp > $(@F)

empathy-enum-types.c: $(libempathy_headers) Makefile
	$(AM_V_GEN)(cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#include <config.h>\n" \
			--fhead "#include <glib-object.h>\n" \
			--fhead "#include \"empathy-enum-types.h\"\n\n" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "static const G@Type@Value _@enum_name@_values[] = {" \
			--vprod "  { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "  { 0, NULL, NULL }\n};\n\n" \
			--vtail "GType\n@enum_name@_get_type (void)\n{\n" \
			--vtail "  static GType type = 0;\n\n" \
			--vtail "  if (!type)\n" \
			--vtail "    type = g_@type@_register_static (\"@EnumName@\", _@enum_name@_values);\n\n" \
			--vtail "  return type;\n}\n\n" \
		$(libempathy_headers) ) > xgen-gtc \
	&& cp xgen-gtc $(@F) \
	&& rm -f xgen-gtc

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
